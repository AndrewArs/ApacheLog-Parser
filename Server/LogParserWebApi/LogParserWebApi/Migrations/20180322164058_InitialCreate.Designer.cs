// <auto-generated />
using DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace LogParserWebApi.Migrations
{
    [DbContext(typeof(LogContext))]
    [Migration("20180322164058_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DomainModels.Models.Geolocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryCode");

                    b.Property<string>("CountryName");

                    b.Property<string>("Ip");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<int>("MetroCode");

                    b.Property<string>("RegionCode");

                    b.Property<string>("RegionName");

                    b.Property<string>("TimeZone");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Geolocations");
                });

            modelBuilder.Entity("DomainModels.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int?>("GeolocationId");

                    b.Property<string>("Host");

                    b.Property<int?>("Length");

                    b.Property<string>("Method");

                    b.Property<string>("Route");

                    b.Property<int>("StatusCode");

                    b.Property<string>("UrlQueryParameters");

                    b.HasKey("Id");

                    b.HasIndex("GeolocationId");

                    b.HasIndex("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("DomainModels.Models.Log", b =>
                {
                    b.HasOne("DomainModels.Models.Geolocation", "Geolocation")
                        .WithMany()
                        .HasForeignKey("GeolocationId");
                });
#pragma warning restore 612, 618
        }
    }
}
